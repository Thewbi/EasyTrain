<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>de.wfb.rail</groupId>
	<artifactId>Startup</artifactId>
	<version>1.0.0</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>8</maven.compiler.target>
		<maven.compiler.source>8</maven.compiler.source>
		<org.springframework.version>5.2.2.RELEASE</org.springframework.version>
	</properties>

	<dependencies>

		<!-- rail -->
		<dependency>
			<groupId>de.wfb.rail</groupId>
			<artifactId>coreapi</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>de.wfb.rail</groupId>
			<artifactId>ui</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>de.wfb.rail</groupId>
			<artifactId>rail</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>de.wfb.rail</groupId>
			<artifactId>model</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>13</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-web</artifactId>
			<version>13</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>13</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>13</version>
		</dependency>

		<dependency>
			<groupId>com.neuronrobotics</groupId>
			<artifactId>nrjavaserial</artifactId>
			<version>5.1.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-beans -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.16.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.13.2</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-all -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreesvg</artifactId>
			<version>3.4</version>
		</dependency>

	</dependencies>

	<build>

		<!-- https://openjfx.io/openjfx-docs/#maven -->
		<plugins>

			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>0.0.3</version>
				<configuration>
					<!-- <mainClass>javafxtest.SVGTest</mainClass> -->
					<!-- <mainClass>javafxtest.ScalingDemo</mainClass> -->
					<!--<mainClass>javafxtest.ScrollPaneDemo</mainClass> -->
					<!--<mainClass>javafxtest.GraphicsScalingApp</mainClass> -->
					<mainClass>de.wfb.Startup</mainClass>
				</configuration>
				<executions>
					<execution>
						<!-- Default configuration for running -->
						<id>default-cli</id>
						<configuration>
							<mainClass>de.wfb.Startup</mainClass>
						</configuration>
					</execution>
					<execution>
						<!-- Configuration for debugging -->
						<!-- run with a maven debug configuration: javafx:run@debug -->
						<!-- The app will start and wait for a remote debugger to connect. -->
						<!-- Create a Debug configuration: Remote Java Application to localhost 
							and the specified port (8000 in this case) -->
						<id>debug</id>
						<configuration>
							<options>
								<option>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:8000</option>
							</options>
							<mainClass>de.wfb.Startup</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> 
				<executions> <execution> <phase>package</phase> <goals> <goal>single</goal> 
				</goals> <configuration> <archive> <manifest> <mainClass> de.wfb.Startup 
				</mainClass> </manifest> </archive> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> 
				</descriptorRefs> </configuration> </execution> </executions> </plugin> -->
			<plugin>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>de.wfb.StartupNotDerivedFromApplication</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-resources-resources-folder</id>
						<phase>process-classes</phase>
						<goals><goal>resources</goal></goals>
						<configuration>
							<outputDirectory>${basedir}/target/src/main/resources</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-persistence-folder</id>
						<phase>process-classes</phase>
						<goals><goal>resources</goal></goals>
						<configuration>
							<outputDirectory>${basedir}/target/persistence</outputDirectory>
							<resources>
								<resource>
									<directory>persistence</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>