package javafxtest;

import javafx.application.Application;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.ScrollPane;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.CornerRadii;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafxtest.controls.CustomGridPane;

public class ScrollPaneDemo extends Application {

	public static void main(String[] args) {
		launch(args);
	}

	public void start(Stage stage) throws Exception {
		
		stage.setScene(createScene());
		
		stage.setTitle("ScrollPaneDemo");
		stage.setWidth(800);
		stage.setHeight(600);
		
		stage.show();
	}
	
	private Scene createScene() {
		
		CustomGridPane customGridPane = new CustomGridPane();
		customGridPane.setBackground(new Background(new BackgroundFill(Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));
		
		Group group = new Group(customGridPane);
		
		
		ScrollPane scrollPane = new ScrollPane(group);
		scrollPane.setStyle("-fx-background: rgb(150, 150, 150);");
		scrollPane.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() { 
	        @Override 
	        public void handle(MouseEvent e) {
	        	
	        	System.out.println(e.getSource());
	        }
		});
		
		StackPane stackPane = new StackPane();
		stackPane.getChildren().addAll(scrollPane);
		stackPane.setBackground(new Background(new BackgroundFill(Color.DARKGREEN, CornerRadii.EMPTY, Insets.EMPTY)));
		stackPane.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() { 
	        @Override 
	        public void handle(MouseEvent e) {
	        	
	        	System.out.println(e.getSource());
	        }
		});
		
		Scene scene = new Scene(stackPane);
		
		scene.setOnKeyReleased(new EventHandler<KeyEvent>() {

			@Override
			public void handle(KeyEvent event) {

				switch (event.getCode()) {
				case UP:
					customGridPane.zoomIn();
					break;
				case DOWN:
					customGridPane.zoomOut();
					break;
				default:
					break;
				}
			}
		});
		
		return scene;
	}
	
	

}
