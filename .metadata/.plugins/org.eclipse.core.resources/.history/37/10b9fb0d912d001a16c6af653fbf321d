package de.wfb.rail.factory;

import gnu.io.CommPort;
import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;

public class DefaultSerialPortFactory implements Factory<SerialPort> {

	@Override
	public SerialPort create(final Object... args) {
		return connect(args[0]);
	}

	private SerialPort connect(final String portName) throws Exception {

		final CommPortIdentifier portIdentifier = CommPortIdentifier.getPortIdentifier(portName);

		if (portIdentifier.isCurrentlyOwned()) {

			System.out.println("Error: Port is currently in use");
			return null;
		}

		// number of milliseconds to wait for the port to open
		final int connectionTimeoutInMillis = 2000;

		final CommPort commPort = portIdentifier.open(APPLICATION_NAME, connectionTimeoutInMillis);

		if (!(commPort instanceof SerialPort)) {
			System.out.println("Error: Only serial ports are handled by this example.");
			return null;
		}

		final SerialPort serialPort = (SerialPort) commPort;
		serialPort.setSerialPortParams(BAUD_RATE, DATA_BITS, STOP_BITS, PARITY);

		return serialPort;
	}

}
